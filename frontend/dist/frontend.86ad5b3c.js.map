{"mappings":"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","sources":["js/models/app-state.js"],"sourcesContent":["/**\r\n * AppState Model\r\n * Global application state management\r\n */\r\n\r\n/**\r\n * UI State for sidebar and content display\r\n */\r\nclass UIState {\r\n    constructor(data = {}) {\r\n        this.leftSidebarVisible = data.leftSidebarVisible !== undefined ? data.leftSidebarVisible : true;\r\n        this.rightSidebarVisible = data.rightSidebarVisible !== undefined ? data.rightSidebarVisible : true;\r\n        this.contentZoom = data.contentZoom || 100;\r\n        this.theme = data.theme || 'cyberpunk';\r\n        this.activeSection = data.activeSection || 'reszletes';\r\n        this.currentTopicId = data.currentTopicId || null;\r\n    }\r\n    \r\n    /**\r\n     * Toggle sidebar visibility\r\n     */\r\n    toggleSidebar(side) {\r\n        if (side === 'left') {\r\n            this.leftSidebarVisible = !this.leftSidebarVisible;\r\n        } else if (side === 'right') {\r\n            this.rightSidebarVisible = !this.rightSidebarVisible;\r\n        }\r\n    }\r\n    \r\n    /**\r\n     * Set content zoom level\r\n     */\r\n    setZoom(zoomLevel) {\r\n        // Clamp between 50% and 200%\r\n        this.contentZoom = Math.max(50, Math.min(200, zoomLevel));\r\n    }\r\n    \r\n    /**\r\n     * Convert to plain object for storage\r\n     */\r\n    toJSON() {\r\n        return {\r\n            leftSidebarVisible: this.leftSidebarVisible,\r\n            rightSidebarVisible: this.rightSidebarVisible,\r\n            contentZoom: this.contentZoom,\r\n            theme: this.theme,\r\n            activeSection: this.activeSection,\r\n            currentTopicId: this.currentTopicId\r\n        };\r\n    }\r\n}\r\n\r\n/**\r\n * Cache State for topic caching\r\n */\r\nclass CacheState {\r\n    constructor(data = {}) {\r\n        this.topics = new Map(data.topics || []);\r\n        this.maxSize = data.maxSize || 50;\r\n        this.stats = new CacheStats(data.stats || {});\r\n        this.accessOrder = data.accessOrder || [];\r\n    }\r\n    \r\n    /**\r\n     * Add or update a topic in cache\r\n     */\r\n    set(topicId, topic) {\r\n        // Remove if already exists to update access order\r\n        if (this.topics.has(topicId)) {\r\n            this.remove(topicId);\r\n        }\r\n        \r\n        // Check cache size limit\r\n        if (this.topics.size >= this.maxSize) {\r\n            this.evictLRU();\r\n        }\r\n        \r\n        // Add to cache\r\n        this.topics.set(topicId, topic);\r\n        this.accessOrder.push(topicId);\r\n        this.stats.size = this.topics.size;\r\n    }\r\n    \r\n    /**\r\n     * Get a topic from cache\r\n     */\r\n    get(topicId) {\r\n        if (this.topics.has(topicId)) {\r\n            // Update access order\r\n            this.updateAccessOrder(topicId);\r\n            this.stats.recordHit();\r\n            return this.topics.get(topicId);\r\n        }\r\n        this.stats.recordMiss();\r\n        return null;\r\n    }\r\n    \r\n    /**\r\n     * Remove a topic from cache\r\n     */\r\n    remove(topicId) {\r\n        this.topics.delete(topicId);\r\n        this.accessOrder = this.accessOrder.filter(id => id !== topicId);\r\n        this.stats.size = this.topics.size;\r\n    }\r\n    \r\n    /**\r\n     * Clear entire cache\r\n     */\r\n    clear() {\r\n        this.topics.clear();\r\n        this.accessOrder = [];\r\n        this.stats.size = 0;\r\n        this.stats.reset();\r\n    }\r\n    \r\n    /**\r\n     * Evict least recently used item\r\n     */\r\n    evictLRU() {\r\n        if (this.accessOrder.length > 0) {\r\n            const lruId = this.accessOrder.shift();\r\n            this.topics.delete(lruId);\r\n            this.stats.size = this.topics.size;\r\n        }\r\n    }\r\n    \r\n    /**\r\n     * Update access order for a topic\r\n     */\r\n    updateAccessOrder(topicId) {\r\n        this.accessOrder = this.accessOrder.filter(id => id !== topicId);\r\n        this.accessOrder.push(topicId);\r\n    }\r\n    \r\n    /**\r\n     * Check if topic is in cache\r\n     */\r\n    has(topicId) {\r\n        return this.topics.has(topicId);\r\n    }\r\n}\r\n\r\n/**\r\n * Error log entry\r\n */\r\nclass ErrorLog {\r\n    constructor(data = {}) {\r\n        this.timestamp = data.timestamp ? new Date(data.timestamp) : new Date();\r\n        this.type = data.type || 'unknown';\r\n        this.message = data.message || '';\r\n        this.details = data.details || null;\r\n        this.topicId = data.topicId || null;\r\n        this.stack = data.stack || null;\r\n    }\r\n    \r\n    /**\r\n     * Create error log from Error object\r\n     */\r\n    static fromError(error, type = 'unknown', topicId = null) {\r\n        return new ErrorLog({\r\n            type,\r\n            message: error.message,\r\n            details: error.details || null,\r\n            topicId,\r\n            stack: error.stack\r\n        });\r\n    }\r\n    \r\n    /**\r\n     * Format error for display\r\n     */\r\n    getDisplayMessage() {\r\n        let msg = `[${this.timestamp.toLocaleTimeString()}] ${this.type}: ${this.message}`;\r\n        if (this.topicId) {\r\n            msg += ` (Tétel ${this.topicId})`;\r\n        }\r\n        return msg;\r\n    }\r\n}\r\n\r\n/**\r\n * Main application state\r\n */\r\nclass AppState {\r\n    constructor(data = {}) {\r\n        this.currentTopic = data.currentTopic || null;\r\n        this.ui = new UIState(data.ui || {});\r\n        this.cache = new CacheState(data.cache || {});\r\n        this.errors = (data.errors || []).map(e => new ErrorLog(e));\r\n        this.isLoading = data.isLoading || false;\r\n        this.initialized = data.initialized || false;\r\n    }\r\n    \r\n    /**\r\n     * Set current topic\r\n     */\r\n    setCurrentTopic(topic) {\r\n        this.currentTopic = topic;\r\n        if (topic) {\r\n            this.ui.currentTopicId = topic.id;\r\n            this.cache.set(topic.id, topic);\r\n        }\r\n    }\r\n    \r\n    /**\r\n     * Clear current topic\r\n     */\r\n    clearCurrentTopic() {\r\n        this.currentTopic = null;\r\n        this.ui.currentTopicId = null;\r\n    }\r\n    \r\n    /**\r\n     * Add error to log\r\n     */\r\n    logError(error, type = 'unknown') {\r\n        const errorLog = error instanceof ErrorLog \r\n            ? error \r\n            : ErrorLog.fromError(error, type, this.ui.currentTopicId);\r\n        \r\n        this.errors.push(errorLog);\r\n        \r\n        // Keep only last 50 errors\r\n        if (this.errors.length > 50) {\r\n            this.errors = this.errors.slice(-50);\r\n        }\r\n    }\r\n    \r\n    /**\r\n     * Clear error log\r\n     */\r\n    clearErrors() {\r\n        this.errors = [];\r\n    }\r\n    \r\n    /**\r\n     * Get recent errors\r\n     */\r\n    getRecentErrors(count = 10) {\r\n        return this.errors.slice(-count);\r\n    }\r\n    \r\n    /**\r\n     * Set loading state\r\n     */\r\n    setLoading(isLoading) {\r\n        this.isLoading = isLoading;\r\n    }\r\n    \r\n    /**\r\n     * Save UI state to localStorage\r\n     */\r\n    saveUIState() {\r\n        try {\r\n            localStorage.setItem('neurologyApp_uiState', JSON.stringify(this.ui.toJSON()));\r\n        } catch (e) {\r\n            console.error('Failed to save UI state:', e);\r\n        }\r\n    }\r\n    \r\n    /**\r\n     * Load UI state from localStorage\r\n     */\r\n    loadUIState() {\r\n        try {\r\n            const saved = localStorage.getItem('neurologyApp_uiState');\r\n            if (saved) {\r\n                const data = JSON.parse(saved);\r\n                this.ui = new UIState(data);\r\n            }\r\n        } catch (e) {\r\n            console.error('Failed to load UI state:', e);\r\n        }\r\n    }\r\n    \r\n    /**\r\n     * Reset to default state\r\n     */\r\n    reset() {\r\n        this.currentTopic = null;\r\n        this.ui = new UIState();\r\n        this.cache.clear();\r\n        this.errors = [];\r\n        this.isLoading = false;\r\n        this.initialized = false;\r\n    }\r\n    \r\n    /**\r\n     * Get state summary for debugging\r\n     */\r\n    getSummary() {\r\n        return {\r\n            currentTopicId: this.currentTopic?.id || null,\r\n            currentTopicTitle: this.currentTopic?.title || null,\r\n            uiState: this.ui.toJSON(),\r\n            cacheSize: this.cache.topics.size,\r\n            cacheHitRate: this.cache.stats.getHitRate() + '%',\r\n            errorCount: this.errors.length,\r\n            isLoading: this.isLoading,\r\n            initialized: this.initialized\r\n        };\r\n    }\r\n}\r\n\r\n// Create singleton instance\r\nconst appState = new AppState();\r\n\r\n// Load saved UI state on initialization\r\nappState.loadUIState();\r\n\r\n// Export for use in other modules\r\nif (typeof module !== 'undefined' && module.exports) {\r\n    module.exports = { AppState, UIState, CacheState, ErrorLog, appState };\r\n}"],"names":[],"version":3,"file":"frontend.86ad5b3c.js.map","sourceRoot":"/__parcel_source_root/"}