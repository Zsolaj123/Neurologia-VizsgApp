{"mappings":"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","sources":["js/modules/topic-loader.js"],"sourcesContent":["/**\r\n * Topic Loader Module\r\n * Loads and manages topic content\r\n */\r\n\r\nclass TopicLoader {\r\n    constructor() {\r\n        this.baseUrl = 'content/neuroanat';\r\n        this.topics = new Map(); // Topic metadata cache\r\n        this.loadingPromises = new Map(); // Prevent duplicate loads\r\n        \r\n        // Topic metadata (pre-defined for neuroanatomy topics 1-60)\r\n        this.topicMetadata = this.initializeTopicMetadata();\r\n    }\r\n    \r\n    /**\r\n     * Initialize topic metadata\r\n     * @private\r\n     */\r\n    initializeTopicMetadata() {\r\n        const metadata = new Map();\r\n        \r\n        // Use the actual topic metadata if available\r\n        if (window.TOPIC_METADATA) {\r\n            for (let i = 1; i <= 259; i++) {\r\n                const topicData = window.TOPIC_METADATA[i];\r\n                if (topicData) {\r\n                    metadata.set(i, {\r\n                        id: i,\r\n                        title: topicData.title,\r\n                        category: topicData.category || 'neuroanat',\r\n                        range: topicData.folder,\r\n                        folder: topicData.folder,\r\n                        filename: this.getTopicFilename(i, topicData)\r\n                    });\r\n                }\r\n            }\r\n        } else {\r\n            // Fallback if metadata not loaded\r\n            for (let i = 1; i <= 259; i++) {\r\n                metadata.set(i, {\r\n                    id: i,\r\n                    title: `${i}. tétel`,\r\n                    category: i <= 59 ? 'neuroanat' : (i <= 179 ? 'clinical' : 'detailed-clinical'),\r\n                    range: this.getTopicRange(i),\r\n                    folder: this.getTopicRange(i),\r\n                    filename: `${i}.md`\r\n                });\r\n            }\r\n        }\r\n        \r\n        return metadata;\r\n    }\r\n    \r\n    /**\r\n     * Get topic filename\r\n     * @private\r\n     */\r\n    getTopicFilename(id, topicData) {\r\n        // Handle special cases like 70-71, 91-92, etc.\r\n        const title = topicData.title;\r\n        \r\n        // Check if filename might be a range (e.g., 70-71)\r\n        if (id === 70 || id === 71) {\r\n            return `70-71. ${title}.md`;\r\n        } else if (id === 91 || id === 92) {\r\n            return `91-92. ${title}.md`;\r\n        } else if (id === 101 || id === 102) {\r\n            return `101-102. ${title}.md`;\r\n        } else if (id === 138 || id === 139) {\r\n            return `138-139. ${title}.md`;\r\n        } else if (id === 155 || id === 156) {\r\n            return `155-156. ${title}.md`;\r\n        } else if (id === 160 || id === 161) {\r\n            return `160-161. ${title}.md`;\r\n        } else if (id === 163 || id === 164) {\r\n            return `163-164. ${title}.md`;\r\n        }\r\n        // Detailed clinical topics with multiple topics per file\r\n        else if (id === 181 || id === 182) {\r\n            return `181-182. Alkoholizmussal és kábítószerrel kapcsolatos neurológiai kórképek.md`;\r\n        } else if (id >= 185 && id <= 187) {\r\n            return `185-186-187. Parkinson-kór, Parkinson-kór vizsgálata és kezelése.md`;\r\n        } else if (id === 189 || id === 190) {\r\n            return `189-190. Parkinson szindrómával járó betegségek klinikuma és kórszövettana és multiszisztémás atrófia.md`;\r\n        } else if (id === 193 || id === 194) {\r\n            return `193-194. Dystoniák, choreák és kezelésük.md`;\r\n        } else if (id === 202 || id === 203) {\r\n            return `202-203. Neuroborreliosis és neurosyphilis.md`;\r\n        } else if (id === 211 || id === 212) {\r\n            return `211-212. A polyneuropathiák diagnózisa és kezelése.md`;\r\n        } else if (id === 213 || id === 214) {\r\n            return `213-214. Szerzett és herediter polyneuropathiák.md`;\r\n        } else if (id === 218 || id === 219) {\r\n            return `218-219. Izomdystrophiák, myotonia és a neuromuscularis ingerületátvitel zavarai.md`;\r\n        } else if (id === 220 || id === 221) {\r\n            return `220-221. Myopathiák és gyulladásos, endokrin, metabolikus és toxikus izombetegségek.md`;\r\n        } else if (id === 224 || id === 225) {\r\n            return `224-225. A tensios és a cluster fejfájás; Neuralgiák.md`;\r\n        } else if (id === 229 || id === 230) {\r\n            return `229-230. Nem-Alzheimer típusú degeneratív demenciák és Vascularis demencia.md`;\r\n        } else if (id === 232 || id === 233) {\r\n            return `232-233. Kezelhető dementia formák és normal pressure hydrocephalus.md`;\r\n        } else if (id === 234 || id === 235) {\r\n            return `234-235. Demenciák kezelése és a neuropszichológiai vizsgálatok.md`;\r\n        } else if (id === 236 || id === 237) {\r\n            return `236-237. Mitochondiralis és trinucleotid repeat expanziós betegségek.md`;\r\n        } else if (id === 238 || id === 239) {\r\n            return `238-239. Neurogenetika - demenciák és izombetegségek.md`;\r\n        } else if (id === 240 || id === 241) {\r\n            return `240-241. A neurológiai rehabilitációs és az aphasia rehabilitációja.md`;\r\n        } else if (id === 242 || id === 243) {\r\n            return `242-243. A koponyasérült beteg kivizsgálásának menete és a traumás intracraniális vérzések.md`;\r\n        } else if (id === 244 || id === 245) {\r\n            return `244-245. Az agy traumás károsodása és a post-traumás neurológiai kórképek.md`;\r\n        } else if (id === 246 || id === 247) {\r\n            return `246-247. Vizsgálati stratégia gerincvelő károsodás gyanúja esetén és a gerincvelői harántlézió.md`;\r\n        } else if (id === 248 || id === 249) {\r\n            return `248-249. Psychosomaticus zavarok tünetei és depresszió organikus idegrendszeri betegségekben.md`;\r\n        } else if (id === 250 || id === 251) {\r\n            return `250-251. Organikus psychoszindrómák és konverziós kórképek differenciáldiagnosztikája.md`;\r\n        } else if (id === 252 || id === 253) {\r\n            return `252-253. Monitorizálás neurológiai intenzív osztályon és az agyhalál megállapítása.md`;\r\n        } else if (id === 258 || id === 259) {\r\n            return `258-259. Neurológiai betegségek a terhesség alatt és az idős kor neurológiája.md`;\r\n        } else {\r\n            return `${id}. ${title}.md`;\r\n        }\r\n    }\r\n    \r\n    /**\r\n     * Get topic range\r\n     * @private\r\n     */\r\n    getTopicRange(topicId) {\r\n        if (topicId <= 20) return '1-20';\r\n        if (topicId <= 40) return '21-40';\r\n        if (topicId <= 59) return '41-59';\r\n        if (topicId <= 79) return '60-79';\r\n        if (topicId <= 99) return '80-99';\r\n        if (topicId <= 119) return '100-119';\r\n        if (topicId <= 139) return '120-139';\r\n        if (topicId <= 159) return '140-159';\r\n        if (topicId <= 179) return '160-179';\r\n        if (topicId <= 199) return '180-199';\r\n        if (topicId <= 219) return '200-219';\r\n        if (topicId <= 239) return '220-239';\r\n        return '240-259';\r\n    }\r\n    \r\n    /**\r\n     * Get all available topics\r\n     * @returns {Array<TopicMetadata>}\r\n     */\r\n    getAvailableTopics() {\r\n        const topics = [];\r\n        \r\n        for (const [id, meta] of this.topicMetadata) {\r\n            topics.push(new TopicMetadata({\r\n                id: meta.id,\r\n                title: meta.title,\r\n                category: meta.category,\r\n                hasOsszefoglalas: true, // Will be updated when loaded\r\n                hasKepek: true // Will be updated when loaded\r\n            }));\r\n        }\r\n        \r\n        return topics.sort((a, b) => a.id - b.id);\r\n    }\r\n    \r\n    /**\r\n     * Load a topic by ID\r\n     * @param {number} topicId - The topic ID\r\n     * @returns {Promise<Topic>}\r\n     */\r\n    async loadTopic(topicId) {\r\n        // Validate topic ID\r\n        if (!this.topicMetadata.has(topicId)) {\r\n            throw new TopicNotFoundError(topicId);\r\n        }\r\n        \r\n        // Check cache first\r\n        const cached = appState.cache.get(topicId);\r\n        if (cached) {\r\n            return cached;\r\n        }\r\n        \r\n        // Check if already loading\r\n        if (this.loadingPromises.has(topicId)) {\r\n            return this.loadingPromises.get(topicId);\r\n        }\r\n        \r\n        // Create loading promise\r\n        const loadingPromise = this._loadTopicContent(topicId);\r\n        this.loadingPromises.set(topicId, loadingPromise);\r\n        \r\n        try {\r\n            const topic = await loadingPromise;\r\n            this.loadingPromises.delete(topicId);\r\n            \r\n            // Cache the topic\r\n            appState.cache.set(topicId, topic);\r\n            \r\n            // Update metadata\r\n            this.topics.set(topicId, TopicMetadata.fromTopic(topic));\r\n            \r\n            // Emit event\r\n            window.dispatchEvent(new CustomEvent('topicLoaded', {\r\n                detail: { topicId, topic }\r\n            }));\r\n            \r\n            return topic;\r\n        } catch (error) {\r\n            this.loadingPromises.delete(topicId);\r\n            \r\n            // Emit error event\r\n            window.dispatchEvent(new CustomEvent('topicLoadError', {\r\n                detail: { topicId, error }\r\n            }));\r\n            \r\n            throw error;\r\n        }\r\n    }\r\n    \r\n    /**\r\n     * Load topic content from file\r\n     * @private\r\n     */\r\n    async _loadTopicContent(topicId) {\r\n        const meta = this.topicMetadata.get(topicId);\r\n        \r\n        // Determine base URL based on category\r\n        let baseUrl;\r\n        if (meta.category === 'clinical') {\r\n            baseUrl = 'content/clinical';\r\n        } else if (meta.category === 'detailed-clinical') {\r\n            baseUrl = 'content/detailed-clinical';\r\n        } else {\r\n            baseUrl = this.baseUrl; // neuroanat\r\n        }\r\n        \r\n        const url = `${baseUrl}/${meta.folder}/${meta.filename}`;\r\n        \r\n        try {\r\n            const response = await fetch(url);\r\n            \r\n            if (!response.ok) {\r\n                if (response.status === 404) {\r\n                    throw new TopicNotFoundError(topicId);\r\n                }\r\n                throw new NetworkError(url, response.status);\r\n            }\r\n            \r\n            const markdown = await response.text();\r\n            \r\n            // Parse markdown\r\n            const parsed = markdownParser.parseMarkdown(markdown);\r\n            const sections = markdownParser.parseSections(markdown);\r\n            \r\n            // Extract title from content\r\n            const title = this.extractTitle(markdown, topicId);\r\n            \r\n            // Create topic\r\n            const topic = Topic.fromRawData(\r\n                topicId,\r\n                title,\r\n                markdown,\r\n                sections,\r\n                parsed.toc\r\n            );\r\n            \r\n            return topic;\r\n            \r\n        } catch (error) {\r\n            if (error instanceof NeurologyAppError) {\r\n                throw error;\r\n            }\r\n            \r\n            if (error.name === 'NetworkError' || error.message.includes('Failed to fetch')) {\r\n                throw new NetworkError(url, null, error);\r\n            }\r\n            \r\n            throw new FileLoadError(meta.filename, error);\r\n        }\r\n    }\r\n    \r\n    /**\r\n     * Extract title from markdown\r\n     * @private\r\n     */\r\n    extractTitle(markdown, topicId) {\r\n        // Look for first H1 header\r\n        const h1Match = markdown.match(/^# (.+)$/m);\r\n        if (h1Match) {\r\n            return h1Match[1].trim();\r\n        }\r\n        \r\n        // Look for any header\r\n        const headerMatch = markdown.match(/^#{1,6} (.+)$/m);\r\n        if (headerMatch) {\r\n            return headerMatch[1].trim();\r\n        }\r\n        \r\n        // Fallback to default title\r\n        return `${topicId}. tétel`;\r\n    }\r\n    \r\n    /**\r\n     * Preload multiple topics\r\n     * @param {Array<number>} topicIds - Array of topic IDs\r\n     * @returns {Promise<Array<Topic>>}\r\n     */\r\n    async preloadTopics(topicIds) {\r\n        const promises = topicIds.map(id => \r\n            this.loadTopic(id).catch(error => {\r\n                console.error(`Failed to preload topic ${id}:`, error);\r\n                return null;\r\n            })\r\n        );\r\n        \r\n        const results = await Promise.all(promises);\r\n        return results.filter(topic => topic !== null);\r\n    }\r\n    \r\n    /**\r\n     * Reload a topic (bypass cache)\r\n     * @param {number} topicId - The topic ID\r\n     * @returns {Promise<Topic>}\r\n     */\r\n    async reloadTopic(topicId) {\r\n        // Remove from cache\r\n        appState.cache.remove(topicId);\r\n        \r\n        // Load fresh\r\n        return this.loadTopic(topicId);\r\n    }\r\n    \r\n    /**\r\n     * Search topics by keyword\r\n     * @param {string} keyword - Search keyword\r\n     * @returns {Array<TopicMetadata>}\r\n     */\r\n    searchTopics(keyword) {\r\n        if (!keyword || keyword.trim().length === 0) {\r\n            return this.getAvailableTopics();\r\n        }\r\n        \r\n        const searchTerm = keyword.toLowerCase();\r\n        const results = [];\r\n        \r\n        for (const [id, meta] of this.topics) {\r\n            if (meta.title.toLowerCase().includes(searchTerm)) {\r\n                results.push(meta);\r\n            }\r\n        }\r\n        \r\n        return results.sort((a, b) => a.id - b.id);\r\n    }\r\n    \r\n    /**\r\n     * Get topics by range\r\n     * @param {string} range - Range like \"1-20\"\r\n     * @returns {Array<TopicMetadata>}\r\n     */\r\n    getTopicsByRange(range) {\r\n        const topics = [];\r\n        \r\n        for (const [id, meta] of this.topicMetadata) {\r\n            if (meta.range === range) {\r\n                const cached = this.topics.get(id);\r\n                if (cached) {\r\n                    topics.push(cached);\r\n                } else {\r\n                    topics.push(new TopicMetadata({\r\n                        id: meta.id,\r\n                        title: meta.title,\r\n                        category: meta.category\r\n                    }));\r\n                }\r\n            }\r\n        }\r\n        \r\n        return topics.sort((a, b) => a.id - b.id);\r\n    }\r\n    \r\n    /**\r\n     * Clear all cached topics\r\n     */\r\n    clearCache() {\r\n        appState.cache.clear();\r\n        this.topics.clear();\r\n        this.loadingPromises.clear();\r\n    }\r\n    \r\n    /**\r\n     * Get loading statistics\r\n     */\r\n    getStats() {\r\n        return {\r\n            totalAvailable: this.topicMetadata.size,\r\n            loaded: this.topics.size,\r\n            cached: appState.cache.topics.size,\r\n            currentlyLoading: this.loadingPromises.size\r\n        };\r\n    }\r\n}\r\n\r\n// Create singleton instance\r\nconst topicLoader = new TopicLoader();\r\n\r\n// Export for use in other modules\r\nif (typeof module !== 'undefined' && module.exports) {\r\n    module.exports = { TopicLoader, topicLoader };\r\n}"],"names":[],"version":3,"file":"frontend.6ee9ce1b.js.map","sourceRoot":"/__parcel_source_root/"}