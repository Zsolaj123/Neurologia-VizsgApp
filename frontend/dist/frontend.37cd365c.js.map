{"mappings":"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","sources":["js/sidebar-manager-optimized.js"],"sourcesContent":["/**\r\n * Sidebar Manager - Optimized Version\r\n * Smooth animations with proper event handling\r\n * No duplicate buttons, no conflicts\r\n */\r\n\r\n(function() {\r\n    'use strict';\r\n    \r\n    // Singleton check\r\n    if (window.sidebarManagerOptimized) {\r\n        console.log('Sidebar Manager already initialized');\r\n        return;\r\n    }\r\n    \r\n    console.log('üöÄ Optimized Sidebar Manager initializing...');\r\n    \r\n    class SidebarManagerOptimized {\r\n        constructor() {\r\n            // Cache DOM references\r\n            this.elements = {\r\n                leftSidebar: null,\r\n                rightSidebar: null,\r\n                leftToggle: null,\r\n                rightToggle: null,\r\n                body: document.body,\r\n                container: null\r\n            };\r\n            \r\n            // State\r\n            this.state = {\r\n                animating: false,\r\n                leftCollapsed: false,\r\n                rightCollapsed: false\r\n            };\r\n            \r\n            // Configuration\r\n            this.config = {\r\n                animationDuration: 1500, // 1.5s to match CSS animations\r\n                laserDuration: 1500,     // Match CSS laser animation duration\r\n                debounceDelay: 50\r\n            };\r\n            \r\n            // Bind methods\r\n            this.toggleLeft = this.toggleLeft.bind(this);\r\n            this.toggleRight = this.toggleRight.bind(this);\r\n            this.handleToggle = this.handleToggle.bind(this);\r\n        }\r\n        \r\n        init() {\r\n            // Cache all DOM elements\r\n            this.cacheElements();\r\n            \r\n            if (!this.validateElements()) {\r\n                console.error('‚ùå Required elements not found');\r\n                return false;\r\n            }\r\n            \r\n            // Set initial state\r\n            this.loadState();\r\n            \r\n            // Setup event listeners with delegation\r\n            this.setupEventListeners();\r\n            \r\n            // Setup mutation observer for state changes\r\n            this.setupObserver();\r\n            \r\n            // Mark as initialized\r\n            window.sidebarManagerOptimized = this;\r\n            \r\n            console.log('‚úÖ Sidebar Manager initialized');\r\n            return true;\r\n        }\r\n        \r\n        cacheElements() {\r\n            this.elements.leftSidebar = document.getElementById('left-sidebar');\r\n            this.elements.rightSidebar = document.getElementById('right-sidebar');\r\n            this.elements.leftToggle = document.getElementById('left-sidebar-toggle');\r\n            this.elements.rightToggle = document.getElementById('right-sidebar-toggle');\r\n            this.elements.container = document.getElementById('app-container');\r\n        }\r\n        \r\n        validateElements() {\r\n            return !!(\r\n                this.elements.leftSidebar && \r\n                this.elements.rightSidebar && \r\n                this.elements.leftToggle && \r\n                this.elements.rightToggle &&\r\n                this.elements.container\r\n            );\r\n        }\r\n        \r\n        loadState() {\r\n            // Load from localStorage or check current DOM state\r\n            this.state.leftCollapsed = \r\n                this.elements.leftSidebar.classList.contains('collapsed') ||\r\n                this.elements.leftSidebar.classList.contains('hidden');\r\n            \r\n            this.state.rightCollapsed = \r\n                this.elements.rightSidebar.classList.contains('collapsed') ||\r\n                this.elements.rightSidebar.classList.contains('hidden');\r\n            \r\n            this.updateUI();\r\n        }\r\n        \r\n        setupEventListeners() {\r\n            // Use single event listener with delegation for better performance\r\n            document.addEventListener('click', (e) => {\r\n                // Check if clicked element is a toggle button\r\n                if (e.target === this.elements.leftToggle || \r\n                    e.target.closest('#left-sidebar-toggle')) {\r\n                    e.preventDefault();\r\n                    this.handleToggle('left');\r\n                } else if (e.target === this.elements.rightToggle || \r\n                           e.target.closest('#right-sidebar-toggle')) {\r\n                    e.preventDefault();\r\n                    this.handleToggle('right');\r\n                }\r\n            });\r\n            \r\n            // Keyboard shortcuts\r\n            document.addEventListener('keydown', (e) => {\r\n                if (e.ctrlKey && e.shiftKey) {\r\n                    if (e.key === 'ArrowLeft') {\r\n                        e.preventDefault();\r\n                        this.handleToggle('left');\r\n                    } else if (e.key === 'ArrowRight') {\r\n                        e.preventDefault();\r\n                        this.handleToggle('right');\r\n                    }\r\n                }\r\n            });\r\n        }\r\n        \r\n        setupObserver() {\r\n            // Watch for external changes to sidebar classes\r\n            const observer = new MutationObserver((mutations) => {\r\n                mutations.forEach((mutation) => {\r\n                    if (mutation.type === 'attributes' && \r\n                        mutation.attributeName === 'class') {\r\n                        this.loadState();\r\n                    }\r\n                });\r\n            });\r\n            \r\n            const config = { \r\n                attributes: true, \r\n                attributeFilter: ['class'] \r\n            };\r\n            \r\n            observer.observe(this.elements.leftSidebar, config);\r\n            observer.observe(this.elements.rightSidebar, config);\r\n            \r\n            // Store observer for cleanup\r\n            this.observer = observer;\r\n        }\r\n        \r\n        handleToggle(side) {\r\n            // Debounce rapid clicks\r\n            if (this.state.animating) {\r\n                console.log('Animation in progress, ignoring toggle');\r\n                return;\r\n            }\r\n            \r\n            // Set animating flag\r\n            this.state.animating = true;\r\n            \r\n            // Perform toggle\r\n            if (side === 'left') {\r\n                this.toggleLeft();\r\n            } else {\r\n                this.toggleRight();\r\n            }\r\n            \r\n            // Clear animating flag after animation completes\r\n            setTimeout(() => {\r\n                this.state.animating = false;\r\n            }, this.config.animationDuration);\r\n        }\r\n        \r\n        toggleLeft() {\r\n            console.log('Toggling left sidebar');\r\n            this.animateSidebar('left');\r\n        }\r\n        \r\n        toggleRight() {\r\n            console.log('Toggling right sidebar');\r\n            this.animateSidebar('right');\r\n        }\r\n        \r\n        animateSidebar(side) {\r\n            const sidebar = side === 'left' ? \r\n                this.elements.leftSidebar : \r\n                this.elements.rightSidebar;\r\n            \r\n            const isCollapsed = side === 'left' ? \r\n                this.state.leftCollapsed : \r\n                this.state.rightCollapsed;\r\n            \r\n            // Add animation class\r\n            sidebar.classList.add('animating');\r\n            \r\n            // Trigger laser effect\r\n            this.triggerLaserEffect(sidebar);\r\n            \r\n            // Toggle state\r\n            if (isCollapsed) {\r\n                this.expandSidebar(side);\r\n            } else {\r\n                this.collapseSidebar(side);\r\n            }\r\n            \r\n            // Remove animation class after completion\r\n            setTimeout(() => {\r\n                sidebar.classList.remove('animating');\r\n            }, this.config.animationDuration);\r\n            \r\n            // Update UI\r\n            this.updateUI();\r\n            \r\n            // Save state\r\n            this.saveState();\r\n        }\r\n        \r\n        triggerLaserEffect(sidebar) {\r\n            const shineEffect = sidebar.querySelector('.shine-effect');\r\n            if (!shineEffect) return;\r\n            \r\n            // Reset animation by forcing reflow\r\n            shineEffect.style.animation = 'none';\r\n            void shineEffect.offsetWidth; // Force reflow\r\n            shineEffect.style.animation = ''; // Let CSS take over\r\n            \r\n            // The parent .animating class will trigger the CSS animation\r\n            // No need to add .active class since CSS uses .animating .shine-effect\r\n        }\r\n        \r\n        expandSidebar(side) {\r\n            const sidebar = side === 'left' ? \r\n                this.elements.leftSidebar : \r\n                this.elements.rightSidebar;\r\n            \r\n            // Update state\r\n            if (side === 'left') {\r\n                this.state.leftCollapsed = false;\r\n            } else {\r\n                this.state.rightCollapsed = false;\r\n            }\r\n            \r\n            // Remove collapsed classes\r\n            sidebar.classList.remove('collapsed', 'hidden');\r\n            \r\n            // Dispatch event\r\n            this.dispatchSidebarEvent('expand', side);\r\n        }\r\n        \r\n        collapseSidebar(side) {\r\n            const sidebar = side === 'left' ? \r\n                this.elements.leftSidebar : \r\n                this.elements.rightSidebar;\r\n            \r\n            // Update state\r\n            if (side === 'left') {\r\n                this.state.leftCollapsed = true;\r\n            } else {\r\n                this.state.rightCollapsed = true;\r\n            }\r\n            \r\n            // Add collapsed class\r\n            sidebar.classList.add('collapsed');\r\n            \r\n            // Keep hidden class for compatibility\r\n            setTimeout(() => {\r\n                sidebar.classList.add('hidden');\r\n            }, 50);\r\n            \r\n            // Dispatch event\r\n            this.dispatchSidebarEvent('collapse', side);\r\n        }\r\n        \r\n        updateUI() {\r\n            // Update button icons\r\n            this.updateButtonIcon('left');\r\n            this.updateButtonIcon('right');\r\n            \r\n            // Update body classes\r\n            this.updateBodyClasses();\r\n        }\r\n        \r\n        updateButtonIcon(side) {\r\n            const button = side === 'left' ? \r\n                this.elements.leftToggle : \r\n                this.elements.rightToggle;\r\n            \r\n            const isCollapsed = side === 'left' ? \r\n                this.state.leftCollapsed : \r\n                this.state.rightCollapsed;\r\n            \r\n            if (!button) return;\r\n            \r\n            // Update icon based on state\r\n            if (side === 'left') {\r\n                button.textContent = isCollapsed ? '‚ñ∂' : '‚óÄ';\r\n                button.title = isCollapsed ? 'T√©telek megjelen√≠t√©se' : '√ñsszecsuk√°s';\r\n            } else {\r\n                button.textContent = isCollapsed ? '‚óÄ' : '‚ñ∂';\r\n                button.title = isCollapsed ? 'Tartalomjegyz√©k megjelen√≠t√©se' : '√ñsszecsuk√°s';\r\n            }\r\n        }\r\n        \r\n        updateBodyClasses() {\r\n            const body = this.elements.body;\r\n            const container = this.elements.container;\r\n            \r\n            // Remove all state classes\r\n            const stateClasses = [\r\n                'left-sidebar-visible', 'left-sidebar-hidden', 'left-sidebar-collapsed',\r\n                'right-sidebar-visible', 'right-sidebar-hidden', 'right-sidebar-collapsed',\r\n                'both-sidebars-hidden', 'both-sidebars-collapsed'\r\n            ];\r\n            \r\n            stateClasses.forEach(cls => {\r\n                body.classList.remove(cls);\r\n                container.classList.remove(cls);\r\n            });\r\n            \r\n            // Add appropriate classes based on state\r\n            if (this.state.leftCollapsed) {\r\n                body.classList.add('left-sidebar-hidden', 'left-sidebar-collapsed');\r\n                container.classList.add('left-sidebar-collapsed');\r\n            } else {\r\n                body.classList.add('left-sidebar-visible');\r\n            }\r\n            \r\n            if (this.state.rightCollapsed) {\r\n                body.classList.add('right-sidebar-hidden', 'right-sidebar-collapsed');\r\n                container.classList.add('right-sidebar-collapsed');\r\n            } else {\r\n                body.classList.add('right-sidebar-visible');\r\n            }\r\n            \r\n            if (this.state.leftCollapsed && this.state.rightCollapsed) {\r\n                body.classList.add('both-sidebars-hidden', 'both-sidebars-collapsed');\r\n            }\r\n        }\r\n        \r\n        saveState() {\r\n            // Save to localStorage\r\n            try {\r\n                localStorage.setItem('sidebarState', JSON.stringify({\r\n                    leftCollapsed: this.state.leftCollapsed,\r\n                    rightCollapsed: this.state.rightCollapsed\r\n                }));\r\n            } catch (e) {\r\n                console.warn('Failed to save sidebar state:', e);\r\n            }\r\n        }\r\n        \r\n        dispatchSidebarEvent(action, side) {\r\n            // Dispatch custom event for other components\r\n            const event = new CustomEvent('sidebarToggle', {\r\n                detail: { action, side },\r\n                bubbles: true\r\n            });\r\n            \r\n            document.dispatchEvent(event);\r\n        }\r\n        \r\n        // Public API\r\n        getState() {\r\n            return { ...this.state };\r\n        }\r\n        \r\n        // Cleanup\r\n        destroy() {\r\n            if (this.observer) {\r\n                this.observer.disconnect();\r\n            }\r\n            \r\n            window.sidebarManagerOptimized = null;\r\n        }\r\n    }\r\n    \r\n    // Initialize when DOM is ready\r\n    if (document.readyState === 'loading') {\r\n        document.addEventListener('DOMContentLoaded', () => {\r\n            new SidebarManagerOptimized().init();\r\n        });\r\n    } else {\r\n        new SidebarManagerOptimized().init();\r\n    }\r\n    \r\n})();"],"names":[],"version":3,"file":"frontend.37cd365c.js.map","sourceRoot":"/__parcel_source_root/"}