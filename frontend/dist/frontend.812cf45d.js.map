{"mappings":"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","sources":["js/modules/toc-generator.js"],"sourcesContent":["/**\r\n * Table of Contents Generator Module\r\n * Generates and manages TOC from parsed content\r\n */\r\n\r\nclass TocGenerator {\r\n    constructor() {\r\n        this.tocContainer = null;\r\n        this.currentTopic = null;\r\n        this.activeItemId = null;\r\n        \r\n        // Bind methods\r\n        this.handleTocClick = this.handleTocClick.bind(this);\r\n    }\r\n    \r\n    /**\r\n     * Initialize TOC generator\r\n     */\r\n    initialize() {\r\n        this.tocContainer = document.getElementById('toc-container');\r\n        if (!this.tocContainer) {\r\n            throw new InitializationError('TOC container not found');\r\n        }\r\n        \r\n        // Set up event delegation\r\n        this.tocContainer.addEventListener('click', this.handleTocClick);\r\n    }\r\n    \r\n    /**\r\n     * Generate TOC from topic\r\n     * @param {Topic} topic - The topic object\r\n     */\r\n    generateTOC(topic) {\r\n        if (!topic || !topic.tableOfContents) {\r\n            this.clearTOC();\r\n            return;\r\n        }\r\n        \r\n        this.currentTopic = topic;\r\n        const tocHTML = this.buildTOCHTML(topic.tableOfContents);\r\n        this.renderTOC(tocHTML);\r\n        \r\n        // Emit event\r\n        window.dispatchEvent(new CustomEvent('tocGenerated', {\r\n            detail: { topicId: topic.id, itemCount: topic.tableOfContents.length }\r\n        }));\r\n    }\r\n    \r\n    /**\r\n     * Build TOC HTML\r\n     * @private\r\n     */\r\n    buildTOCHTML(tocItems, level = 0) {\r\n        if (!tocItems || tocItems.length === 0) {\r\n            return '';\r\n        }\r\n        \r\n        const html = tocItems.map(item => {\r\n            const indent = level * 16; // 16px per level\r\n            const hasChildren = item.children && item.children.length > 0;\r\n            \r\n            let itemHTML = `\r\n                <div class=\"toc-item ${hasChildren ? 'expanded' : ''}\" data-toc-id=\"${item.id}\" data-level=\"${item.level}\" style=\"padding-left: ${indent}px;\">\r\n                    <a href=\"#${item.id}\" class=\"toc-link\">\r\n                        ${hasChildren ? '<span class=\"toc-arrow\">▼</span>' : '<span class=\"toc-bullet\">•</span>'}\r\n                        <span class=\"toc-text\">${this.escapeHtml(item.text)}</span>\r\n                    </a>\r\n                </div>\r\n            `;\r\n            \r\n            // Add children recursively\r\n            if (hasChildren) {\r\n                itemHTML += `<div class=\"toc-children expanded\" data-parent=\"${item.id}\">`;\r\n                itemHTML += this.buildTOCHTML(item.children, level + 1);\r\n                itemHTML += '</div>';\r\n            }\r\n            \r\n            return itemHTML;\r\n        }).join('');\r\n        \r\n        return html;\r\n    }\r\n    \r\n    /**\r\n     * Render TOC to container\r\n     * @private\r\n     */\r\n    renderTOC(html) {\r\n        if (!this.tocContainer) return;\r\n        \r\n        this.tocContainer.innerHTML = `\r\n            <div class=\"toc-header\">\r\n                <button class=\"toc-toggle\" id=\"toc-expand-all\">Összes kinyitása</button>\r\n            </div>\r\n            <div class=\"toc-content\">\r\n                ${html || '<p class=\"toc-empty\">Nincs tartalomjegyzék</p>'}\r\n            </div>\r\n        `;\r\n        \r\n        // Set up expand/collapse button\r\n        const expandButton = document.getElementById('toc-expand-all');\r\n        if (expandButton) {\r\n            expandButton.addEventListener('click', () => this.toggleAllItems());\r\n        }\r\n    }\r\n    \r\n    /**\r\n     * Clear TOC\r\n     */\r\n    clearTOC() {\r\n        if (this.tocContainer) {\r\n            this.tocContainer.innerHTML = '';\r\n        }\r\n        this.currentTopic = null;\r\n        this.activeItemId = null;\r\n    }\r\n    \r\n    /**\r\n     * Handle TOC item click\r\n     * @private\r\n     */\r\n    handleTocClick(event) {\r\n        const tocLink = event.target.closest('.toc-link');\r\n        if (!tocLink) return;\r\n        \r\n        event.preventDefault();\r\n        \r\n        const tocItem = tocLink.closest('.toc-item');\r\n        const tocId = tocItem.dataset.tocId;\r\n        \r\n        // Handle arrow click for expand/collapse\r\n        if (event.target.classList.contains('toc-arrow')) {\r\n            this.toggleItem(tocId);\r\n            return;\r\n        }\r\n        \r\n        // Navigate to section\r\n        this.navigateToSection(tocId);\r\n    }\r\n    \r\n    /**\r\n     * Navigate to section\r\n     * @private\r\n     */\r\n    navigateToSection(tocId) {\r\n        // Update active state\r\n        this.setActiveItem(tocId);\r\n        \r\n        // Find element in content\r\n        const targetElement = document.getElementById(tocId);\r\n        if (targetElement) {\r\n            targetElement.scrollIntoView({ behavior: 'smooth', block: 'start' });\r\n        }\r\n        \r\n        // Emit navigation event\r\n        window.dispatchEvent(new CustomEvent('tocNavigation', {\r\n            detail: { tocId, topicId: this.currentTopic?.id }\r\n        }));\r\n    }\r\n    \r\n    /**\r\n     * Set active TOC item\r\n     */\r\n    setActiveItem(tocId) {\r\n        // Remove previous active\r\n        const previousActive = this.tocContainer.querySelector('.toc-item.active');\r\n        if (previousActive) {\r\n            previousActive.classList.remove('active');\r\n        }\r\n        \r\n        // Set new active\r\n        const newActive = this.tocContainer.querySelector(`[data-toc-id=\"${tocId}\"]`);\r\n        if (newActive) {\r\n            newActive.classList.add('active');\r\n            this.activeItemId = tocId;\r\n            \r\n            // Ensure item is visible\r\n            this.ensureItemVisible(newActive);\r\n        }\r\n    }\r\n    \r\n    /**\r\n     * Toggle item expansion\r\n     * @private\r\n     */\r\n    toggleItem(tocId) {\r\n        const item = this.tocContainer.querySelector(`[data-toc-id=\"${tocId}\"]`);\r\n        const children = this.tocContainer.querySelector(`[data-parent=\"${tocId}\"]`);\r\n        const arrow = item?.querySelector('.toc-arrow');\r\n        \r\n        if (!children || !arrow) return;\r\n        \r\n        const isExpanded = children.classList.contains('expanded');\r\n        \r\n        if (isExpanded) {\r\n            children.classList.remove('expanded');\r\n            item.classList.remove('expanded');\r\n            arrow.textContent = '▶';\r\n        } else {\r\n            children.classList.add('expanded');\r\n            item.classList.add('expanded');\r\n            arrow.textContent = '▼';\r\n        }\r\n    }\r\n    \r\n    /**\r\n     * Toggle all items\r\n     * @private\r\n     */\r\n    toggleAllItems() {\r\n        const allChildren = this.tocContainer.querySelectorAll('.toc-children');\r\n        const allArrows = this.tocContainer.querySelectorAll('.toc-arrow');\r\n        const expandButton = document.getElementById('toc-expand-all');\r\n        \r\n        const hasCollapsed = Array.from(allChildren).some(child => !child.classList.contains('expanded'));\r\n        \r\n        if (hasCollapsed) {\r\n            // Expand all\r\n            allChildren.forEach(child => {\r\n                child.classList.add('expanded');\r\n                const parentItem = child.previousElementSibling;\r\n                if (parentItem && parentItem.classList.contains('toc-item')) {\r\n                    parentItem.classList.add('expanded');\r\n                }\r\n            });\r\n            allArrows.forEach(arrow => arrow.textContent = '▼');\r\n            if (expandButton) expandButton.textContent = 'Összes becsukása';\r\n        } else {\r\n            // Collapse all\r\n            allChildren.forEach(child => {\r\n                child.classList.remove('expanded');\r\n                const parentItem = child.previousElementSibling;\r\n                if (parentItem && parentItem.classList.contains('toc-item')) {\r\n                    parentItem.classList.remove('expanded');\r\n                }\r\n            });\r\n            allArrows.forEach(arrow => arrow.textContent = '▶');\r\n            if (expandButton) expandButton.textContent = 'Összes kinyitása';\r\n        }\r\n    }\r\n    \r\n    /**\r\n     * Ensure item is visible in scrollable container\r\n     * @private\r\n     */\r\n    ensureItemVisible(item) {\r\n        // First ensure all parent items are expanded\r\n        let parent = item.parentElement;\r\n        while (parent && parent !== this.tocContainer) {\r\n            if (parent.classList.contains('toc-children') && !parent.classList.contains('expanded')) {\r\n                // Expand this parent\r\n                parent.classList.add('expanded');\r\n                const parentItem = parent.previousElementSibling;\r\n                if (parentItem && parentItem.classList.contains('toc-item')) {\r\n                    parentItem.classList.add('expanded');\r\n                    const arrow = parentItem.querySelector('.toc-arrow');\r\n                    if (arrow) arrow.textContent = '▼';\r\n                }\r\n            }\r\n            parent = parent.parentElement;\r\n        }\r\n        \r\n        // Then scroll into view if needed\r\n        const container = this.tocContainer.querySelector('.toc-content');\r\n        if (!container) return;\r\n        \r\n        const itemRect = item.getBoundingClientRect();\r\n        const containerRect = container.getBoundingClientRect();\r\n        \r\n        if (itemRect.top < containerRect.top || itemRect.bottom > containerRect.bottom) {\r\n            item.scrollIntoView({ behavior: 'smooth', block: 'nearest' });\r\n        }\r\n    }\r\n    \r\n    /**\r\n     * Update TOC based on scroll position\r\n     */\r\n    updateActiveFromScroll() {\r\n        if (!this.currentTopic || !this.currentTopic.tableOfContents) {\r\n            console.debug('TOC: No current topic or TOC data');\r\n            return;\r\n        }\r\n        \r\n        const contentArea = document.getElementById('content-display');\r\n        if (!contentArea) {\r\n            console.debug('TOC: No content area found');\r\n            return;\r\n        }\r\n        \r\n        // Find all headers in content\r\n        const headers = contentArea.querySelectorAll('h1[id], h2[id], h3[id], h4[id], h5[id], h6[id]');\r\n        if (headers.length === 0) {\r\n            console.debug('TOC: No headers found in content');\r\n            return;\r\n        }\r\n        \r\n        let activeId = null;\r\n        const scrollTop = contentArea.scrollTop;\r\n        const scrollHeight = contentArea.scrollHeight;\r\n        const clientHeight = contentArea.clientHeight;\r\n        \r\n        // Check if we're at the bottom\r\n        if (scrollTop + clientHeight >= scrollHeight - 10) {\r\n            // Highlight the last header\r\n            activeId = headers[headers.length - 1].id;\r\n        } else {\r\n            // Find the header that's currently in view\r\n            for (const header of headers) {\r\n                const rect = header.getBoundingClientRect();\r\n                const contentRect = contentArea.getBoundingClientRect();\r\n                const relativeTop = rect.top - contentRect.top;\r\n                \r\n                if (relativeTop <= 50) { // 50px offset from top of content area\r\n                    activeId = header.id;\r\n                } else if (relativeTop > 50) {\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        \r\n        if (activeId && activeId !== this.activeItemId) {\r\n            this.setActiveItem(activeId);\r\n        }\r\n    }\r\n    \r\n    /**\r\n     * Escape HTML characters\r\n     * @private\r\n     */\r\n    escapeHtml(text) {\r\n        const div = document.createElement('div');\r\n        div.textContent = text;\r\n        return div.innerHTML;\r\n    }\r\n    \r\n    /**\r\n     * Get TOC statistics\r\n     */\r\n    getStats() {\r\n        if (!this.currentTopic || !this.currentTopic.tableOfContents) {\r\n            return { totalItems: 0, maxDepth: 0 };\r\n        }\r\n        \r\n        let totalItems = 0;\r\n        let maxDepth = 0;\r\n        \r\n        const countItems = (items, depth = 1) => {\r\n            for (const item of items) {\r\n                totalItems++;\r\n                maxDepth = Math.max(maxDepth, depth);\r\n                if (item.children && item.children.length > 0) {\r\n                    countItems(item.children, depth + 1);\r\n                }\r\n            }\r\n        };\r\n        \r\n        countItems(this.currentTopic.tableOfContents);\r\n        \r\n        return { totalItems, maxDepth };\r\n    }\r\n    \r\n    /**\r\n     * Destroy TOC generator\r\n     */\r\n    destroy() {\r\n        if (this.tocContainer) {\r\n            this.tocContainer.removeEventListener('click', this.handleTocClick);\r\n        }\r\n        this.clearTOC();\r\n    }\r\n}\r\n\r\n// Create singleton instance\r\nconst tocGenerator = new TocGenerator();\r\n\r\n// Make available globally\r\nwindow.tocGenerator = tocGenerator;\r\n\r\n// Export for use in other modules\r\nif (typeof module !== 'undefined' && module.exports) {\r\n    module.exports = { TocGenerator, tocGenerator };\r\n}"],"names":[],"version":3,"file":"frontend.812cf45d.js.map","sourceRoot":"/__parcel_source_root/"}