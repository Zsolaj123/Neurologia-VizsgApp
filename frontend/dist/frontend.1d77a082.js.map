{"mappings":"AAAA;;;CAGC,GAED;;CAEC,GACD,MAAM;IACF,YAAY,OAAO,CAAC,CAAC,CAAE;QACnB,IAAI,CAAC,IAAI,GAAG,KAAK,IAAI,IAAI,IAAI,0CAA0C;QACvE,IAAI,CAAC,KAAK,GAAG,KAAK,KAAK,IAAI;QAC3B,IAAI,CAAC,OAAO,GAAG,KAAK,OAAO,IAAI;QAC/B,IAAI,CAAC,WAAW,GAAG,KAAK,WAAW,IAAI;QACvC,IAAI,CAAC,OAAO,GAAG,KAAK,OAAO,KAAK,YAAY,KAAK,OAAO,GAAG;IAC/D;IAEA;;KAEC,GACD,OAAO,aAAa,IAAI,EAAE,KAAK,EAAE,QAAQ,EAAE,IAAI,EAAE;QAC7C,OAAO,IAAI,QAAQ;YACf;YACA;YACA,SAAS;YACT,aAAa;YACb,SAAS,CAAC,YAAY,SAAS,IAAI,GAAG,MAAM,KAAK;QACrD;IACJ;IAEA;;KAEC,GACD,OAAO,MAAM,IAAI,EAAE,KAAK,EAAE;QACtB,OAAO,IAAI,QAAQ;YACf;YACA;YACA,SAAS;YACT,aAAa;YACb,SAAS;QACb;IACJ;AACJ;AAEA;;CAEC,GACD,MAAM;IACF,YAAY,OAAO,CAAC,CAAC,CAAE;QACnB,IAAI,CAAC,EAAE,GAAG,KAAK,EAAE,IAAI;QACrB,IAAI,CAAC,IAAI,GAAG,KAAK,IAAI,IAAI;QACzB,IAAI,CAAC,KAAK,GAAG,KAAK,KAAK,IAAI;QAC3B,IAAI,CAAC,QAAQ,GAAG,KAAK,QAAQ,IAAI,EAAE;IACvC;IAEA;;KAEC,GACD,SAAS,SAAS,EAAE;QAChB,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC;IACvB;IAEA;;KAEC,GACD,SAAS;QACL,OAAO;YACH,IAAI,IAAI,CAAC,EAAE;YACX,MAAM,IAAI,CAAC,IAAI;YACf,OAAO,IAAI,CAAC,KAAK;YACjB,UAAU,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAA,QAAS,MAAM,MAAM;QACrD;IACJ;AACJ;AAEA;;CAEC,GACD,MAAM;IACF,YAAY,OAAO,CAAC,CAAC,CAAE;QACnB,IAAI,CAAC,EAAE,GAAG,KAAK,EAAE,IAAI;QACrB,IAAI,CAAC,KAAK,GAAG,KAAK,KAAK,IAAI;QAC3B,IAAI,CAAC,QAAQ,GAAG,KAAK,QAAQ,IAAI;QACjC,IAAI,CAAC,KAAK,GAAG,KAAK,KAAK,IAAI;QAC3B,IAAI,CAAC,IAAI,GAAG,KAAK,IAAI,IAAI,EAAE;QAC3B,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,mBAAmB,CAAC,KAAK,QAAQ;QACtD,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,cAAc,CAAC,KAAK,eAAe;QAC/D,IAAI,CAAC,YAAY,GAAG,KAAK,YAAY,GAAG,IAAI,KAAK,KAAK,YAAY,IAAI,IAAI;QAC1E,IAAI,CAAC,SAAS,GAAG,KAAK,SAAS,IAAI;IACvC;IAEA;;KAEC,GACD,oBAAoB,eAAe,CAAC,CAAC,EAAE;QACnC,OAAO;YACH,WAAW,aAAa,SAAS,YAAY,UACvC,aAAa,SAAS,GACtB,IAAI,QAAQ,aAAa,SAAS,IAAI;gBAAE,MAAM;gBAAa,OAAO;YAAY;YACpF,eAAe,aAAa,aAAa,YAAY,UAC/C,aAAa,aAAa,GAC1B,IAAI,QAAQ,aAAa,aAAa,IAAI;gBAAE,MAAM;gBAAiB,OAAO;YAAgB;YAChG,OAAO,aAAa,KAAK,YAAY,UAC/B,aAAa,KAAK,GAClB,IAAI,QAAQ,aAAa,KAAK,IAAI;gBAAE,MAAM;gBAAS,OAAO;YAAQ;QAC5E;IACJ;IAEA;;KAEC,GACD,eAAe,UAAU,EAAE,EAAE;QACzB,OAAO,QAAQ,GAAG,CAAC,CAAA,OACf,gBAAgB,UAAU,OAAO,IAAI,QAAQ;IAErD;IAEA;;KAEC,GACD,OAAO,oBAAoB,OAAO,EAAE;QAChC,IAAI,WAAW,KAAK,WAAW,IAAI;YAC/B,MAAM,WAAW;YACjB,IAAI;YACJ,IAAI,WAAW,IAAI,QAAQ;iBACtB,IAAI,WAAW,IAAI,QAAQ;iBAC3B,QAAQ;YACb,OAAO;gBAAE;gBAAU;YAAM;QAC7B;QACA,sCAAsC;QACtC,OAAO;YAAE,UAAU;YAAW,OAAO;QAAU;IACnD;IAEA;;KAEC,GACD,OAAO,YAAY,EAAE,EAAE,KAAK,EAAE,eAAe,EAAE,cAAc,EAAE,QAAQ,EAAE,OAAO,EAAE,EAAE;QAChF,MAAM,EAAE,QAAQ,EAAE,KAAK,EAAE,GAAG,MAAM,mBAAmB,CAAC;QAEtD,OAAO,IAAI,MAAM;YACb;YACA;YACA;YACA;YACA;YACA,UAAU;YACV,iBAAiB;YACjB,cAAc,IAAI;YAClB,WAAW;QACf;IACJ;IAEA;;KAEC,GACD,WAAW,WAAW,EAAE;QACpB,OAAO,IAAI,CAAC,QAAQ,CAAC,YAAY,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,YAAY,CAAC,OAAO;IAC5E;IAEA;;KAEC,GACD,WAAW,WAAW,EAAE;QACpB,OAAO,IAAI,CAAC,QAAQ,CAAC,YAAY;IACrC;IAEA;;KAEC,GACD,SAAS;QACL,OAAO;YACH,IAAI,IAAI,CAAC,EAAE;YACX,OAAO,IAAI,CAAC,KAAK;YACjB,UAAU,IAAI,CAAC,QAAQ;YACvB,OAAO,IAAI,CAAC,KAAK;YACjB,MAAM,IAAI,CAAC,IAAI;YACf,UAAU;gBACN,WAAW,IAAI,CAAC,QAAQ,CAAC,SAAS;gBAClC,eAAe,IAAI,CAAC,QAAQ,CAAC,aAAa;gBAC1C,OAAO,IAAI,CAAC,QAAQ,CAAC,KAAK;YAC9B;YACA,iBAAiB,IAAI,CAAC,eAAe,CAAC,GAAG,CAAC,CAAA,OAAQ,KAAK,MAAM;YAC7D,cAAc,IAAI,CAAC,YAAY,CAAC,WAAW;YAC3C,WAAW,IAAI,CAAC,SAAS;QAC7B;IACJ;AACJ;AAEA;;CAEC,GACD,MAAM;IACF,YAAY,OAAO,CAAC,CAAC,CAAE;QACnB,IAAI,CAAC,EAAE,GAAG,KAAK,EAAE,IAAI;QACrB,IAAI,CAAC,KAAK,GAAG,KAAK,KAAK,IAAI;QAC3B,IAAI,CAAC,QAAQ,GAAG,KAAK,QAAQ,IAAI;QACjC,IAAI,CAAC,gBAAgB,GAAG,KAAK,gBAAgB,IAAI;QACjD,IAAI,CAAC,QAAQ,GAAG,KAAK,QAAQ,IAAI;IACrC;IAEA;;KAEC,GACD,OAAO,UAAU,KAAK,EAAE;QACpB,OAAO,IAAI,cAAc;YACrB,IAAI,MAAM,EAAE;YACZ,OAAO,MAAM,KAAK;YAClB,UAAU,MAAM,QAAQ;YACxB,kBAAkB,MAAM,UAAU,CAAC;YACnC,UAAU,MAAM,UAAU,CAAC;QAC/B;IACJ;AACJ;AAEA;;CAEC,GACD,MAAM;IACF,YAAY,OAAO,CAAC,CAAC,CAAE;QACnB,IAAI,CAAC,IAAI,GAAG,KAAK,IAAI,IAAI;QACzB,IAAI,CAAC,OAAO,GAAG,KAAK,OAAO,IAAI;QAC/B,IAAI,CAAC,IAAI,GAAG,KAAK,IAAI,IAAI;QACzB,IAAI,CAAC,MAAM,GAAG,KAAK,MAAM,IAAI;QAC7B,IAAI,CAAC,UAAU,GAAG,KAAK,UAAU,GAAG,IAAI,KAAK,KAAK,UAAU,IAAI;IACpE;IAEA;;KAEC,GACD,aAAa;QACT,MAAM,QAAQ,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,MAAM;QACrC,OAAO,QAAQ,IAAI,AAAC,CAAA,IAAI,CAAC,IAAI,GAAG,QAAQ,GAAE,EAAG,OAAO,CAAC,KAAK;IAC9D;IAEA;;KAEC,GACD,YAAY;QACR,IAAI,CAAC,IAAI;QACT,IAAI,CAAC,UAAU,GAAG,IAAI;IAC1B;IAEA;;KAEC,GACD,aAAa;QACT,IAAI,CAAC,MAAM;QACX,IAAI,CAAC,UAAU,GAAG,IAAI;IAC1B;IAEA;;KAEC,GACD,QAAQ;QACJ,IAAI,CAAC,IAAI,GAAG;QACZ,IAAI,CAAC,MAAM,GAAG;QACd,IAAI,CAAC,UAAU,GAAG;IACtB;AACJ;AAEA,0CAA0C;AAC1C,IAAI,OAAO,WAAW,eAAe,OAAO,OAAO,EAC/C,OAAO,OAAO,GAAG;IAAE;IAAO;IAAS;IAAS;IAAe;AAAW","sources":["js/models/topic.js"],"sourcesContent":["/**\r\n * Topic Model and Related Entities\r\n * Data structures for the neurology exam app\r\n */\r\n\r\n/**\r\n * Represents a content section within a topic\r\n */\r\nclass Section {\r\n    constructor(data = {}) {\r\n        this.type = data.type || ''; // \"reszletes\" | \"osszefoglalas\" | \"kepek\"\r\n        this.title = data.title || '';\r\n        this.content = data.content || '';\r\n        this.rawMarkdown = data.rawMarkdown || '';\r\n        this.isEmpty = data.isEmpty !== undefined ? data.isEmpty : true;\r\n    }\r\n    \r\n    /**\r\n     * Create a Section from markdown content\r\n     */\r\n    static fromMarkdown(type, title, markdown, html) {\r\n        return new Section({\r\n            type,\r\n            title,\r\n            content: html,\r\n            rawMarkdown: markdown,\r\n            isEmpty: !markdown || markdown.trim().length === 0\r\n        });\r\n    }\r\n    \r\n    /**\r\n     * Create an empty section\r\n     */\r\n    static empty(type, title) {\r\n        return new Section({\r\n            type,\r\n            title,\r\n            content: '',\r\n            rawMarkdown: '',\r\n            isEmpty: true\r\n        });\r\n    }\r\n}\r\n\r\n/**\r\n * Represents a table of contents item\r\n */\r\nclass TocItem {\r\n    constructor(data = {}) {\r\n        this.id = data.id || '';\r\n        this.text = data.text || '';\r\n        this.level = data.level || 1;\r\n        this.children = data.children || [];\r\n    }\r\n    \r\n    /**\r\n     * Add a child TOC item\r\n     */\r\n    addChild(childItem) {\r\n        this.children.push(childItem);\r\n    }\r\n    \r\n    /**\r\n     * Convert to plain object for serialization\r\n     */\r\n    toJSON() {\r\n        return {\r\n            id: this.id,\r\n            text: this.text,\r\n            level: this.level,\r\n            children: this.children.map(child => child.toJSON())\r\n        };\r\n    }\r\n}\r\n\r\n/**\r\n * Represents a single exam topic\r\n */\r\nclass Topic {\r\n    constructor(data = {}) {\r\n        this.id = data.id || 0;\r\n        this.title = data.title || '';\r\n        this.category = data.category || '';\r\n        this.range = data.range || '';\r\n        this.tags = data.tags || [];\r\n        this.sections = this._initializeSections(data.sections);\r\n        this.tableOfContents = this._initializeToc(data.tableOfContents);\r\n        this.lastModified = data.lastModified ? new Date(data.lastModified) : new Date();\r\n        this.isBundled = data.isBundled || false;\r\n    }\r\n    \r\n    /**\r\n     * Initialize sections with Section instances\r\n     */\r\n    _initializeSections(sectionsData = {}) {\r\n        return {\r\n            reszletes: sectionsData.reszletes instanceof Section \r\n                ? sectionsData.reszletes \r\n                : new Section(sectionsData.reszletes || { type: 'reszletes', title: 'Részletes' }),\r\n            osszefoglalas: sectionsData.osszefoglalas instanceof Section \r\n                ? sectionsData.osszefoglalas \r\n                : new Section(sectionsData.osszefoglalas || { type: 'osszefoglalas', title: 'Összefoglalás' }),\r\n            kepek: sectionsData.kepek instanceof Section \r\n                ? sectionsData.kepek \r\n                : new Section(sectionsData.kepek || { type: 'kepek', title: 'Képek' })\r\n        };\r\n    }\r\n    \r\n    /**\r\n     * Initialize TOC with TocItem instances\r\n     */\r\n    _initializeToc(tocData = []) {\r\n        return tocData.map(item => \r\n            item instanceof TocItem ? item : new TocItem(item)\r\n        );\r\n    }\r\n    \r\n    /**\r\n     * Get the category range for this topic\r\n     */\r\n    static getCategoryAndRange(topicId) {\r\n        if (topicId >= 1 && topicId <= 59) {\r\n            const category = 'neuroanat';\r\n            let range;\r\n            if (topicId <= 20) range = '1-20';\r\n            else if (topicId <= 40) range = '21-40';\r\n            else range = '41-59';\r\n            return { category, range };\r\n        }\r\n        // Future categories can be added here\r\n        return { category: 'unknown', range: 'unknown' };\r\n    }\r\n    \r\n    /**\r\n     * Create a Topic from raw data\r\n     */\r\n    static fromRawData(id, title, markdownContent, parsedSections, tocItems, tags = []) {\r\n        const { category, range } = Topic.getCategoryAndRange(id);\r\n        \r\n        return new Topic({\r\n            id,\r\n            title,\r\n            category,\r\n            range,\r\n            tags,\r\n            sections: parsedSections,\r\n            tableOfContents: tocItems,\r\n            lastModified: new Date(),\r\n            isBundled: false\r\n        });\r\n    }\r\n    \r\n    /**\r\n     * Check if topic has content in a specific section\r\n     */\r\n    hasSection(sectionType) {\r\n        return this.sections[sectionType] && !this.sections[sectionType].isEmpty;\r\n    }\r\n    \r\n    /**\r\n     * Get section by type\r\n     */\r\n    getSection(sectionType) {\r\n        return this.sections[sectionType];\r\n    }\r\n    \r\n    /**\r\n     * Convert to plain object for serialization\r\n     */\r\n    toJSON() {\r\n        return {\r\n            id: this.id,\r\n            title: this.title,\r\n            category: this.category,\r\n            range: this.range,\r\n            tags: this.tags,\r\n            sections: {\r\n                reszletes: this.sections.reszletes,\r\n                osszefoglalas: this.sections.osszefoglalas,\r\n                kepek: this.sections.kepek\r\n            },\r\n            tableOfContents: this.tableOfContents.map(item => item.toJSON()),\r\n            lastModified: this.lastModified.toISOString(),\r\n            isBundled: this.isBundled\r\n        };\r\n    }\r\n}\r\n\r\n/**\r\n * Lightweight topic information for menu display\r\n */\r\nclass TopicMetadata {\r\n    constructor(data = {}) {\r\n        this.id = data.id || 0;\r\n        this.title = data.title || '';\r\n        this.category = data.category || '';\r\n        this.hasOsszefoglalas = data.hasOsszefoglalas || false;\r\n        this.hasKepek = data.hasKepek || false;\r\n    }\r\n    \r\n    /**\r\n     * Create metadata from a full Topic\r\n     */\r\n    static fromTopic(topic) {\r\n        return new TopicMetadata({\r\n            id: topic.id,\r\n            title: topic.title,\r\n            category: topic.category,\r\n            hasOsszefoglalas: topic.hasSection('osszefoglalas'),\r\n            hasKepek: topic.hasSection('kepek')\r\n        });\r\n    }\r\n}\r\n\r\n/**\r\n * Cache statistics\r\n */\r\nclass CacheStats {\r\n    constructor(data = {}) {\r\n        this.size = data.size || 0;\r\n        this.maxSize = data.maxSize || 50;\r\n        this.hits = data.hits || 0;\r\n        this.misses = data.misses || 0;\r\n        this.lastAccess = data.lastAccess ? new Date(data.lastAccess) : null;\r\n    }\r\n    \r\n    /**\r\n     * Calculate hit rate percentage\r\n     */\r\n    getHitRate() {\r\n        const total = this.hits + this.misses;\r\n        return total > 0 ? (this.hits / total * 100).toFixed(1) : 0;\r\n    }\r\n    \r\n    /**\r\n     * Record a cache hit\r\n     */\r\n    recordHit() {\r\n        this.hits++;\r\n        this.lastAccess = new Date();\r\n    }\r\n    \r\n    /**\r\n     * Record a cache miss\r\n     */\r\n    recordMiss() {\r\n        this.misses++;\r\n        this.lastAccess = new Date();\r\n    }\r\n    \r\n    /**\r\n     * Reset statistics\r\n     */\r\n    reset() {\r\n        this.hits = 0;\r\n        this.misses = 0;\r\n        this.lastAccess = null;\r\n    }\r\n}\r\n\r\n// Export classes for use in other modules\r\nif (typeof module !== 'undefined' && module.exports) {\r\n    module.exports = { Topic, Section, TocItem, TopicMetadata, CacheStats };\r\n}"],"names":[],"version":3,"file":"frontend.1d77a082.js.map","sourceRoot":"/__parcel_source_root/"}